trigger:
- feature/azure-pipelines

pool:
  vmImage: ubuntu-latest

variables:
  DOTVVM_ROOT: $(Build.Repository.LocalPath)
  BUILD_CONFIGURATION: Release

jobs:
  - job: crossplatformBuild
    container: registry.gitlab.com/cafstep/dotvvm-test/dotvvm:latest
    steps:
      - script: npm ci --cache $(DOTVVM_ROOT)/.npm --prefer-offline
        workingDirectory: src/DotVVM.Framework
      - script: npm run build
        workingDirectory: src/DotVVM.Framework
      - script: dotnet restore --packages $(DOTVVM_ROOT)/.nuget src/Crossplatform.sln
      - script: dotnet build --no-restore --configuration $(BUILD_CONFIGURATION) src/Crossplatform.sln
      - publish: artifacts/
        name: crossplatformBuild

  - job: unitTestsCrossplatform
    container: registry.gitlab.com/cafstep/dotvvm-test/dotvvm:latest
    dependsOn: crossplatformBuild
    steps:
      - download: current
        artifact: crossplatformBuild
      - script: mv $(Pipeline.Workspace)/crossplatformBuild $(DOTVVM_ROOT)/artifacts
      - task: DotNetCoreCLI@2
        inputs:
          command: test
          projects: src/DotVVM.Framework.Tests.Common
          arguments: --configuration $(BUILD_CONFIGURATION)
          noBuild: true
          publishTestResults: true
