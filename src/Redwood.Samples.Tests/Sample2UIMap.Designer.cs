// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Redwood.Samples.Tests.Sample2UIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class Sample2UIMap
    {
        
        /// <summary>
        /// CloseBrowser
        /// </summary>
        public void CloseBrowser()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodInteTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(21, 17));
        }
        
        /// <summary>
        /// CheckMCB1 - Use 'CheckMCB1Params' to pass parameters into this method.
        /// </summary>
        public void CheckMCB1()
        {
            #region Variable Declarations
            HtmlCheckBox uIItemCheckBox1 = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIItemCheckBox1;
            HtmlCheckBox uIItemCheckBox11 = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIItemCheckBox11;
            HtmlInputButton uIPostbackButton1 = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIPostbackButton1;
            #endregion

            // Select check box
            uIItemCheckBox1.Checked = this.CheckMCB1Params.UIItemCheckBox1Checked;

            // Select check box
            uIItemCheckBox11.Checked = this.CheckMCB1Params.UIItemCheckBox11Checked;

            // Click 'Postback' button
            Mouse.Click(uIPostbackButton1, new Point(28, 15));
        }
        
        /// <summary>
        /// CheckMCB2 - Use 'CheckMCB2Params' to pass parameters into this method.
        /// </summary>
        public void CheckMCB2()
        {
            #region Variable Declarations
            HtmlCheckBox uIItemCheckBox11 = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIItemCheckBox11;
            HtmlCheckBox uIItemCheckBox12 = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIItemCheckBox12;
            HtmlInputButton uIPostbackButton1 = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIPostbackButton1;
            #endregion

            // Clear check box
            uIItemCheckBox11.Checked = this.CheckMCB2Params.UIItemCheckBox11Checked;

            // Select check box
            uIItemCheckBox12.Checked = this.CheckMCB2Params.UIItemCheckBox12Checked;

            // Click 'Postback' button
            Mouse.Click(uIPostbackButton1, new Point(35, 22));
        }
        
        /// <summary>
        /// CheckRB1 - Use 'CheckRB1Params' to pass parameters into this method.
        /// </summary>
        public void CheckRB1()
        {
            #region Variable Declarations
            HtmlRadioButton uIGroup2RadioButton = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIGroup2RadioButton;
            HtmlInputButton uIPostbackButton2 = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIPostbackButton2;
            #endregion

            // Select 'group2' radio button
            uIGroup2RadioButton.Selected = this.CheckRB1Params.UIGroup2RadioButtonSelected;

            // Click 'Postback' button
            Mouse.Click(uIPostbackButton2, new Point(53, 17));
        }
        
        /// <summary>
        /// CheckRB2 - Use 'CheckRB2Params' to pass parameters into this method.
        /// </summary>
        public void CheckRB2()
        {
            #region Variable Declarations
            HtmlRadioButton uIGroup2RadioButton1 = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIGroup2RadioButton1;
            HtmlRadioButton uIGroup2RadioButton11 = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIGroup2RadioButton11;
            HtmlRadioButton uIGroup2RadioButton2 = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIGroup2RadioButton2;
            HtmlInputButton uIPostbackButton2 = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIPostbackButton2;
            #endregion

            // Select 'group2' radio button
            uIGroup2RadioButton1.Selected = this.CheckRB2Params.UIGroup2RadioButton1Selected;

            // Select 'group2' radio button
            uIGroup2RadioButton11.Selected = this.CheckRB2Params.UIGroup2RadioButton11Selected;

            // Select 'group2' radio button
            uIGroup2RadioButton2.Selected = this.CheckRB2Params.UIGroup2RadioButton2Selected;

            // Click 'Postback' button
            Mouse.Click(uIPostbackButton2, new Point(68, 7));
        }
        
        /// <summary>
        /// CheckSCB - Use 'CheckSCBParams' to pass parameters into this method.
        /// </summary>
        public void CheckSCB()
        {
            #region Variable Declarations
            HtmlCheckBox uIItemCheckBox = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIItemCheckBox;
            HtmlInputButton uIPostbackButton = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIPostbackButton;
            #endregion

            // Select check box
            uIItemCheckBox.Checked = this.CheckSCBParams.UIItemCheckBoxChecked;

            // Click 'Postback' button
            Mouse.Click(uIPostbackButton, new Point(24, 11));
        }
        
        /// <summary>
        /// LaunchSample - Use 'LaunchSampleParams' to pass parameters into this method.
        /// </summary>
        public void LaunchSample()
        {
            #region Variable Declarations
            BrowserWindow uIRedwoodSamplesHomePaWindow = this.UIRedwoodSamplesHomePaWindow;
            HtmlHyperlink uISample2CheckBoxRadioHyperlink = this.UIRedwoodSamplesHomePaWindow.UIRedwoodSamplesHomePaDocument.UISample2CheckBoxRadioHyperlink;
            #endregion

            // Go to web page 'http://localhost:8628/' using new browser instance
            this.UIRedwoodSamplesHomePaWindow.LaunchUrl(new System.Uri(this.LaunchSampleParams.UIRedwoodSamplesHomePaWindowUrl));

            // Maximize window 'Redwood Samples HomePage - Internet Explorer'
            uIRedwoodSamplesHomePaWindow.Maximized = this.LaunchSampleParams.UIRedwoodSamplesHomePaWindowMaximized;

            // Click 'Sample 2 - CheckBox & RadioButton' link
            Mouse.Click(uISample2CheckBoxRadioHyperlink, new Point(170, 9));
        }
        
        /// <summary>
        /// VerifyMCB1 - Use 'VerifyMCB1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifyMCB1()
        {
            #region Variable Declarations
            HtmlSpan uIGBPane = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIGBPane;
            #endregion

            // Verify that the 'InnerText' property of 'g, b' pane equals 'g, b'
            Assert.AreEqual(this.VerifyMCB1ExpectedValues.UIGBPaneInnerText, uIGBPane.InnerText);
        }
        
        /// <summary>
        /// VerifyMCB2 - Use 'VerifyMCB2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifyMCB2()
        {
            #region Variable Declarations
            HtmlSpan uIGRPane = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIGRPane;
            #endregion

            // Verify that the 'InnerText' property of 'g, r' pane equals 'g, r'
            Assert.AreEqual(this.VerifyMCB2ExpectedValues.UIGRPaneInnerText, uIGRPane.InnerText);
        }
        
        /// <summary>
        /// VerifyRB1 - Use 'VerifyRB1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifyRB1()
        {
            #region Variable Declarations
            HtmlSpan uIItem2Pane = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIItem2Pane;
            #endregion

            // Verify that the 'InnerText' property of '2' pane equals '2'
            Assert.AreEqual(this.VerifyRB1ExpectedValues.UIItem2PaneInnerText, uIItem2Pane.InnerText);
        }
        
        /// <summary>
        /// VerifyRB2 - Use 'VerifyRB2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifyRB2()
        {
            #region Variable Declarations
            HtmlSpan uIItem3Pane = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UIItem3Pane;
            #endregion

            // Verify that the 'InnerText' property of '3' pane equals '3'
            Assert.AreEqual(this.VerifyRB2ExpectedValues.UIItem3PaneInnerText, uIItem3Pane.InnerText);
        }
        
        /// <summary>
        /// VerifySCB - Use 'VerifySCBExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifySCB()
        {
            #region Variable Declarations
            HtmlSpan uITruePane = this.UIHellofromRedwoodInteWindow.UIHellofromRedwoodDocument.UITruePane;
            #endregion

            // Verify that the 'InnerText' property of 'True' pane equals 'True'
            Assert.AreEqual(this.VerifySCBExpectedValues.UITruePaneInnerText, uITruePane.InnerText);
        }
        
        #region Properties
        public virtual CheckMCB1Params CheckMCB1Params
        {
            get
            {
                if ((this.mCheckMCB1Params == null))
                {
                    this.mCheckMCB1Params = new CheckMCB1Params();
                }
                return this.mCheckMCB1Params;
            }
        }
        
        public virtual CheckMCB2Params CheckMCB2Params
        {
            get
            {
                if ((this.mCheckMCB2Params == null))
                {
                    this.mCheckMCB2Params = new CheckMCB2Params();
                }
                return this.mCheckMCB2Params;
            }
        }
        
        public virtual CheckRB1Params CheckRB1Params
        {
            get
            {
                if ((this.mCheckRB1Params == null))
                {
                    this.mCheckRB1Params = new CheckRB1Params();
                }
                return this.mCheckRB1Params;
            }
        }
        
        public virtual CheckRB2Params CheckRB2Params
        {
            get
            {
                if ((this.mCheckRB2Params == null))
                {
                    this.mCheckRB2Params = new CheckRB2Params();
                }
                return this.mCheckRB2Params;
            }
        }
        
        public virtual CheckSCBParams CheckSCBParams
        {
            get
            {
                if ((this.mCheckSCBParams == null))
                {
                    this.mCheckSCBParams = new CheckSCBParams();
                }
                return this.mCheckSCBParams;
            }
        }
        
        public virtual LaunchSampleParams LaunchSampleParams
        {
            get
            {
                if ((this.mLaunchSampleParams == null))
                {
                    this.mLaunchSampleParams = new LaunchSampleParams();
                }
                return this.mLaunchSampleParams;
            }
        }
        
        public virtual VerifyMCB1ExpectedValues VerifyMCB1ExpectedValues
        {
            get
            {
                if ((this.mVerifyMCB1ExpectedValues == null))
                {
                    this.mVerifyMCB1ExpectedValues = new VerifyMCB1ExpectedValues();
                }
                return this.mVerifyMCB1ExpectedValues;
            }
        }
        
        public virtual VerifyMCB2ExpectedValues VerifyMCB2ExpectedValues
        {
            get
            {
                if ((this.mVerifyMCB2ExpectedValues == null))
                {
                    this.mVerifyMCB2ExpectedValues = new VerifyMCB2ExpectedValues();
                }
                return this.mVerifyMCB2ExpectedValues;
            }
        }
        
        public virtual VerifyRB1ExpectedValues VerifyRB1ExpectedValues
        {
            get
            {
                if ((this.mVerifyRB1ExpectedValues == null))
                {
                    this.mVerifyRB1ExpectedValues = new VerifyRB1ExpectedValues();
                }
                return this.mVerifyRB1ExpectedValues;
            }
        }
        
        public virtual VerifyRB2ExpectedValues VerifyRB2ExpectedValues
        {
            get
            {
                if ((this.mVerifyRB2ExpectedValues == null))
                {
                    this.mVerifyRB2ExpectedValues = new VerifyRB2ExpectedValues();
                }
                return this.mVerifyRB2ExpectedValues;
            }
        }
        
        public virtual VerifySCBExpectedValues VerifySCBExpectedValues
        {
            get
            {
                if ((this.mVerifySCBExpectedValues == null))
                {
                    this.mVerifySCBExpectedValues = new VerifySCBExpectedValues();
                }
                return this.mVerifySCBExpectedValues;
            }
        }
        
        public UIRedwoodSamplesHomePaWindow UIRedwoodSamplesHomePaWindow
        {
            get
            {
                if ((this.mUIRedwoodSamplesHomePaWindow == null))
                {
                    this.mUIRedwoodSamplesHomePaWindow = new UIRedwoodSamplesHomePaWindow();
                }
                return this.mUIRedwoodSamplesHomePaWindow;
            }
        }
        
        public UIHellofromRedwoodInteWindow UIHellofromRedwoodInteWindow
        {
            get
            {
                if ((this.mUIHellofromRedwoodInteWindow == null))
                {
                    this.mUIHellofromRedwoodInteWindow = new UIHellofromRedwoodInteWindow();
                }
                return this.mUIHellofromRedwoodInteWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckMCB1Params mCheckMCB1Params;
        
        private CheckMCB2Params mCheckMCB2Params;
        
        private CheckRB1Params mCheckRB1Params;
        
        private CheckRB2Params mCheckRB2Params;
        
        private CheckSCBParams mCheckSCBParams;
        
        private LaunchSampleParams mLaunchSampleParams;
        
        private VerifyMCB1ExpectedValues mVerifyMCB1ExpectedValues;
        
        private VerifyMCB2ExpectedValues mVerifyMCB2ExpectedValues;
        
        private VerifyRB1ExpectedValues mVerifyRB1ExpectedValues;
        
        private VerifyRB2ExpectedValues mVerifyRB2ExpectedValues;
        
        private VerifySCBExpectedValues mVerifySCBExpectedValues;
        
        private UIRedwoodSamplesHomePaWindow mUIRedwoodSamplesHomePaWindow;
        
        private UIHellofromRedwoodInteWindow mUIHellofromRedwoodInteWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMCB1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class CheckMCB1Params
    {
        
        #region Fields
        /// <summary>
        /// Select check box
        /// </summary>
        public bool UIItemCheckBox1Checked = true;
        
        /// <summary>
        /// Select check box
        /// </summary>
        public bool UIItemCheckBox11Checked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMCB2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class CheckMCB2Params
    {
        
        #region Fields
        /// <summary>
        /// Clear check box
        /// </summary>
        public bool UIItemCheckBox11Checked = false;
        
        /// <summary>
        /// Select check box
        /// </summary>
        public bool UIItemCheckBox12Checked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRB1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class CheckRB1Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'group2' radio button
        /// </summary>
        public bool UIGroup2RadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRB2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class CheckRB2Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'group2' radio button
        /// </summary>
        public bool UIGroup2RadioButton1Selected = true;
        
        /// <summary>
        /// Select 'group2' radio button
        /// </summary>
        public bool UIGroup2RadioButton11Selected = true;
        
        /// <summary>
        /// Select 'group2' radio button
        /// </summary>
        public bool UIGroup2RadioButton2Selected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSCB'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class CheckSCBParams
    {
        
        #region Fields
        /// <summary>
        /// Select check box
        /// </summary>
        public bool UIItemCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LaunchSample'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class LaunchSampleParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:8628/' using new browser instance
        /// </summary>
        public string UIRedwoodSamplesHomePaWindowUrl = "http://localhost:8628/";
        
        /// <summary>
        /// Maximize window 'Redwood Samples HomePage - Internet Explorer'
        /// </summary>
        public bool UIRedwoodSamplesHomePaWindowMaximized = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyMCB1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class VerifyMCB1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'g, b' pane equals 'g, b'
        /// </summary>
        public string UIGBPaneInnerText = "g, b";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyMCB2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class VerifyMCB2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'g, r' pane equals 'g, r'
        /// </summary>
        public string UIGRPaneInnerText = "g, r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyRB1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class VerifyRB1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '2' pane equals '2'
        /// </summary>
        public string UIItem2PaneInnerText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyRB2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class VerifyRB2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '3' pane equals '3'
        /// </summary>
        public string UIItem3PaneInnerText = "3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifySCB'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class VerifySCBExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'True' pane equals 'True'
        /// </summary>
        public string UITruePaneInnerText = "True";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRedwoodSamplesHomePaWindow : BrowserWindow
    {
        
        public UIRedwoodSamplesHomePaWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Redwood Samples HomePage";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Redwood Samples HomePage");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIRedwoodSamplesHomePaDocument UIRedwoodSamplesHomePaDocument
        {
            get
            {
                if ((this.mUIRedwoodSamplesHomePaDocument == null))
                {
                    this.mUIRedwoodSamplesHomePaDocument = new UIRedwoodSamplesHomePaDocument(this);
                }
                return this.mUIRedwoodSamplesHomePaDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIRedwoodSamplesHomePaDocument mUIRedwoodSamplesHomePaDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRedwoodSamplesHomePaDocument : HtmlDocument
    {
        
        public UIRedwoodSamplesHomePaDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Redwood Samples HomePage";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:8628/";
            this.WindowTitles.Add("Redwood Samples HomePage");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UISample2CheckBoxRadioHyperlink
        {
            get
            {
                if ((this.mUISample2CheckBoxRadioHyperlink == null))
                {
                    this.mUISample2CheckBoxRadioHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISample2CheckBoxRadioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUISample2CheckBoxRadioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISample2CheckBoxRadioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISample2CheckBoxRadioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Sample 2 - CheckBox & RadioButton";
                    this.mUISample2CheckBoxRadioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Sample2";
                    this.mUISample2CheckBoxRadioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISample2CheckBoxRadioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:8628/Sample2";
                    this.mUISample2CheckBoxRadioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUISample2CheckBoxRadioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Sample2\"";
                    this.mUISample2CheckBoxRadioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUISample2CheckBoxRadioHyperlink.WindowTitles.Add("Redwood Samples HomePage");
                    #endregion
                }
                return this.mUISample2CheckBoxRadioHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUISample2CheckBoxRadioHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIHellofromRedwoodInteWindow : BrowserWindow
    {
        
        public UIHellofromRedwoodInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Hello from Redwood!";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Hello from Redwood!");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHellofromRedwoodDocument UIHellofromRedwoodDocument
        {
            get
            {
                if ((this.mUIHellofromRedwoodDocument == null))
                {
                    this.mUIHellofromRedwoodDocument = new UIHellofromRedwoodDocument(this);
                }
                return this.mUIHellofromRedwoodDocument;
            }
        }
        
        public UIHellofromRedwoodInteTitleBar UIHellofromRedwoodInteTitleBar
        {
            get
            {
                if ((this.mUIHellofromRedwoodInteTitleBar == null))
                {
                    this.mUIHellofromRedwoodInteTitleBar = new UIHellofromRedwoodInteTitleBar(this);
                }
                return this.mUIHellofromRedwoodInteTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIHellofromRedwoodDocument mUIHellofromRedwoodDocument;
        
        private UIHellofromRedwoodInteTitleBar mUIHellofromRedwoodInteTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIHellofromRedwoodDocument : HtmlDocument
    {
        
        public UIHellofromRedwoodDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Hello from Redwood!";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Sample2";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:8628/Sample2";
            this.WindowTitles.Add("Hello from Redwood!");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIItemCheckBox
        {
            get
            {
                if ((this.mUIItemCheckBox == null))
                {
                    this.mUIItemCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "true";
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "type=\"checkbox\" value=\"true\" data-bind=\"";
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "1";
                    this.mUIItemCheckBox.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIItemCheckBox;
            }
        }
        
        public HtmlInputButton UIPostbackButton
        {
            get
            {
                if ((this.mUIPostbackButton == null))
                {
                    this.mUIPostbackButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIPostbackButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIPostbackButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIPostbackButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Postback";
                    this.mUIPostbackButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIPostbackButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIPostbackButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIPostbackButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "onclick=\"redwood.postBack(\'root\', this, ";
                    this.mUIPostbackButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUIPostbackButton.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIPostbackButton;
            }
        }
        
        public HtmlSpan UITruePane
        {
            get
            {
                if ((this.mUITruePane == null))
                {
                    this.mUITruePane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUITruePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUITruePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITruePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "True";
                    this.mUITruePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITruePane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUITruePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"html: SCBResult\"";
                    this.mUITruePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUITruePane.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUITruePane;
            }
        }
        
        public HtmlCheckBox UIItemCheckBox1
        {
            get
            {
                if ((this.mUIItemCheckBox1 == null))
                {
                    this.mUIItemCheckBox1 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "g";
                    this.mUIItemCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "type=\"checkbox\" value=\"g\" data-bind=\"che";
                    this.mUIItemCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "4";
                    this.mUIItemCheckBox1.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIItemCheckBox1;
            }
        }
        
        public HtmlCheckBox UIItemCheckBox11
        {
            get
            {
                if ((this.mUIItemCheckBox11 == null))
                {
                    this.mUIItemCheckBox11 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemCheckBox11.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox11.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox11.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "b";
                    this.mUIItemCheckBox11.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox11.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox11.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemCheckBox11.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "type=\"checkbox\" value=\"b\" data-bind=\"che";
                    this.mUIItemCheckBox11.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "5";
                    this.mUIItemCheckBox11.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIItemCheckBox11;
            }
        }
        
        public HtmlInputButton UIPostbackButton1
        {
            get
            {
                if ((this.mUIPostbackButton1 == null))
                {
                    this.mUIPostbackButton1 = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIPostbackButton1.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIPostbackButton1.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIPostbackButton1.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Postback";
                    this.mUIPostbackButton1.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIPostbackButton1.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIPostbackButton1.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIPostbackButton1.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "onclick=\"redwood.postBack(\'root\', this, ";
                    this.mUIPostbackButton1.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUIPostbackButton1.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIPostbackButton1;
            }
        }
        
        public HtmlSpan UIGBPane
        {
            get
            {
                if ((this.mUIGBPane == null))
                {
                    this.mUIGBPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIGBPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIGBPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGBPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "g, b";
                    this.mUIGBPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGBPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIGBPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"html: MCBResult\"";
                    this.mUIGBPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIGBPane.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIGBPane;
            }
        }
        
        public HtmlCheckBox UIItemCheckBox12
        {
            get
            {
                if ((this.mUIItemCheckBox12 == null))
                {
                    this.mUIItemCheckBox12 = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIItemCheckBox12.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox12.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox12.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "r";
                    this.mUIItemCheckBox12.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox12.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox12.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIItemCheckBox12.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "type=\"checkbox\" value=\"r\" data-bind=\"che";
                    this.mUIItemCheckBox12.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "3";
                    this.mUIItemCheckBox12.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIItemCheckBox12;
            }
        }
        
        public HtmlSpan UIGRPane
        {
            get
            {
                if ((this.mUIGRPane == null))
                {
                    this.mUIGRPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIGRPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIGRPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGRPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "g, r";
                    this.mUIGRPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGRPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIGRPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"html: MCBResult\"";
                    this.mUIGRPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIGRPane.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIGRPane;
            }
        }
        
        public HtmlRadioButton UIGroup2RadioButton
        {
            get
            {
                if ((this.mUIGroup2RadioButton == null))
                {
                    this.mUIGroup2RadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIGroup2RadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = null;
                    this.mUIGroup2RadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "group2";
                    this.mUIGroup2RadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Value] = "2";
                    this.mUIGroup2RadioButton.SearchProperties[HtmlRadioButton.PropertyNames.LabeledBy] = null;
                    this.mUIGroup2RadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIGroup2RadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "5";
                    this.mUIGroup2RadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIGroup2RadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"group2\" type=\"radio\" value=\"2\" dat";
                    this.mUIGroup2RadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "8";
                    this.mUIGroup2RadioButton.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIGroup2RadioButton;
            }
        }
        
        public HtmlInputButton UIPostbackButton2
        {
            get
            {
                if ((this.mUIPostbackButton2 == null))
                {
                    this.mUIPostbackButton2 = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIPostbackButton2.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIPostbackButton2.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIPostbackButton2.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Postback";
                    this.mUIPostbackButton2.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIPostbackButton2.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIPostbackButton2.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIPostbackButton2.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "onclick=\"redwood.postBack(\'root\', this, ";
                    this.mUIPostbackButton2.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "12";
                    this.mUIPostbackButton2.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIPostbackButton2;
            }
        }
        
        public HtmlSpan UIItem2Pane
        {
            get
            {
                if ((this.mUIItem2Pane == null))
                {
                    this.mUIItem2Pane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItem2Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem2Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem2Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "2";
                    this.mUIItem2Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem2Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIItem2Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"html: DBRBResult\"";
                    this.mUIItem2Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "8";
                    this.mUIItem2Pane.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIItem2Pane;
            }
        }
        
        public HtmlRadioButton UIGroup2RadioButton1
        {
            get
            {
                if ((this.mUIGroup2RadioButton1 == null))
                {
                    this.mUIGroup2RadioButton1 = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIGroup2RadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Id] = null;
                    this.mUIGroup2RadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "group2";
                    this.mUIGroup2RadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Value] = "5";
                    this.mUIGroup2RadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.LabeledBy] = null;
                    this.mUIGroup2RadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIGroup2RadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "5";
                    this.mUIGroup2RadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIGroup2RadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"group2\" type=\"radio\" value=\"5\" dat";
                    this.mUIGroup2RadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "11";
                    this.mUIGroup2RadioButton1.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIGroup2RadioButton1;
            }
        }
        
        public HtmlRadioButton UIGroup2RadioButton11
        {
            get
            {
                if ((this.mUIGroup2RadioButton11 == null))
                {
                    this.mUIGroup2RadioButton11 = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIGroup2RadioButton11.SearchProperties[HtmlRadioButton.PropertyNames.Id] = null;
                    this.mUIGroup2RadioButton11.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "group2";
                    this.mUIGroup2RadioButton11.SearchProperties[HtmlRadioButton.PropertyNames.Value] = "4";
                    this.mUIGroup2RadioButton11.SearchProperties[HtmlRadioButton.PropertyNames.LabeledBy] = null;
                    this.mUIGroup2RadioButton11.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIGroup2RadioButton11.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "5";
                    this.mUIGroup2RadioButton11.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIGroup2RadioButton11.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"group2\" type=\"radio\" value=\"4\" dat";
                    this.mUIGroup2RadioButton11.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "10";
                    this.mUIGroup2RadioButton11.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIGroup2RadioButton11;
            }
        }
        
        public HtmlRadioButton UIGroup2RadioButton2
        {
            get
            {
                if ((this.mUIGroup2RadioButton2 == null))
                {
                    this.mUIGroup2RadioButton2 = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIGroup2RadioButton2.SearchProperties[HtmlRadioButton.PropertyNames.Id] = null;
                    this.mUIGroup2RadioButton2.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "group2";
                    this.mUIGroup2RadioButton2.SearchProperties[HtmlRadioButton.PropertyNames.Value] = "3";
                    this.mUIGroup2RadioButton2.SearchProperties[HtmlRadioButton.PropertyNames.LabeledBy] = null;
                    this.mUIGroup2RadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIGroup2RadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "5";
                    this.mUIGroup2RadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIGroup2RadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"group2\" type=\"radio\" value=\"3\" dat";
                    this.mUIGroup2RadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "9";
                    this.mUIGroup2RadioButton2.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIGroup2RadioButton2;
            }
        }
        
        public HtmlSpan UIItem3Pane
        {
            get
            {
                if ((this.mUIItem3Pane == null))
                {
                    this.mUIItem3Pane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItem3Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem3Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem3Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "3";
                    this.mUIItem3Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem3Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIItem3Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"html: DBRBResult\"";
                    this.mUIItem3Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "8";
                    this.mUIItem3Pane.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUIItem3Pane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIItemCheckBox;
        
        private HtmlInputButton mUIPostbackButton;
        
        private HtmlSpan mUITruePane;
        
        private HtmlCheckBox mUIItemCheckBox1;
        
        private HtmlCheckBox mUIItemCheckBox11;
        
        private HtmlInputButton mUIPostbackButton1;
        
        private HtmlSpan mUIGBPane;
        
        private HtmlCheckBox mUIItemCheckBox12;
        
        private HtmlSpan mUIGRPane;
        
        private HtmlRadioButton mUIGroup2RadioButton;
        
        private HtmlInputButton mUIPostbackButton2;
        
        private HtmlSpan mUIItem2Pane;
        
        private HtmlRadioButton mUIGroup2RadioButton1;
        
        private HtmlRadioButton mUIGroup2RadioButton11;
        
        private HtmlRadioButton mUIGroup2RadioButton2;
        
        private HtmlSpan mUIItem3Pane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIHellofromRedwoodInteTitleBar : WinTitleBar
    {
        
        public UIHellofromRedwoodInteTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Hello from Redwood!");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Hello from Redwood!");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
