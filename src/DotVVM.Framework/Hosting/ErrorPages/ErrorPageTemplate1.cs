// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace DotVVM.Framework.Hosting.ErrorPages
{
    using System;
    using System.IO;
    using System.Linq;
    using System.Collections;
    using System.Collections.Generic;
    using System.Net;
    using System.Reflection;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class ErrorPageTemplate : ErrorPageTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n<!DOCTYPE html>\r\n<html>\r\n\t<head>\r\n\t\t<title>Server Error in Application</title>\r" +
                    "\n\t\t<style type=\"text/css\">\r\nbody { font-family: \'Segoe UI\',Tahoma,sans-serif; fo" +
                    "nt-size: 11pt; }\r\nh1 { font-weight: normal; font-size: 24pt; font-style: italic;" +
                    " }\r\nh2 { font-style: normal; font-size: 16pt; font-weight: bold; margin-bottom: " +
                    "35px; }\r\nh3 { color: #004fbd; font-weight: normal; font-size: 14pt; }\r\np.summary" +
                    " { color: #004fbd, font-size: 1.5em }\r\ntable { border-collapse: separate; border" +
                    "-spacing: 0; margin: 0 0 20px; }\r\nth { vertical-align: bottom; padding: 10px 5px" +
                    " 5px 5px; font-weight: 400; color: #a0a0a0; text-align: left; }\r\ntd { padding: 3" +
                    "px 10px; }\r\nth, td { border-right: 1px #ddd solid; border-bottom: 1px #ddd solid" +
                    "; border-left: 1px transparent solid; border-top: 1px transparent solid; box-siz" +
                    "ing: border-box; }\r\nth:last-child, td:last-child { border-right: 1px transparent" +
                    " solid; }\r\npre { font-size: 12pt; margin: 0px; font-family: \'Consolas\',monospace" +
                    "; }\r\n.source .source-errorLine { color: #ff2c00; }\r\n.errorUnderline { text-decor" +
                    "ation: underline; }\r\ninput.collapse { display: none }\r\ninput[type=checkbox].coll" +
                    "apse ~ .collapse-on  { display: none; }\r\ninput[type=checkbox]:checked.collapse ~" +
                    " .collapse-on  { display: inherit; }\r\ninput[type=checkbox]:checked.collapse ~ .c" +
                    "ollapse-off  { display: none; }\r\nlabel.nav {\r\n\tdisplay: inline-block;\r\n\tpadding:" +
                    " 5px;\r\n\tfont-size: 1.5em;\r\n\tcolor: white;\r\n\tbackground-color: #25384a;\r\n}\r\n.code" +
                    " { font-family: \'Consolas\',monospace; }\r\n.object-obj, .object-arr { padding-left" +
                    ": 10px; }\r\n.container { display: none }\r\n.object-browser .propname { font-weight" +
                    ": bold; }\r\n.docLinks { float: right; }\r\n");
            
            #line 46 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
foreach(var f in Formatters){
            
            #line default
            #line hidden
            this.Write("#menu_radio_");
            
            #line 47 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.Id));
            
            #line default
            #line hidden
            this.Write(":checked ~ #container_");
            
            #line 47 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.Id));
            
            #line default
            #line hidden
            this.Write(" { display: block; }\r\n#menu_radio_");
            
            #line 48 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.Id));
            
            #line default
            #line hidden
            this.Write(":checked ~ label[for=\'menu_radio_");
            
            #line 48 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.Id));
            
            #line default
            #line hidden
            this.Write("\'] { background-color: #004fbd; }\r\n");
            
            #line 49 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
f.WriteHead(this);
            
            #line default
            #line hidden
            
            #line 50 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t</style>\r\n\t</head>\r\n\t<body>\r\n\t\t<h1>Server Error, HTTP ");
            
            #line 54 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ErrorCode));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 54 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(WebUtility.HtmlEncode(ErrorDescription)));
            
            #line default
            #line hidden
            this.Write("</h1>\r\n\t\t<p class=\"summary\">");
            
            #line 55 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(WebUtility.HtmlEncode(Summary)));
            
            #line default
            #line hidden
            this.Write("</p>\r\n\t\t<hr />\r\n\t\t<div>\r\n\t\t");
            
            #line 58 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
 foreach(var f in Formatters) {
            
            #line default
            #line hidden
            this.Write("\t\t\t<input type=\"radio\" id=\"menu_radio_");
            
            #line 59 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.Id));
            
            #line default
            #line hidden
            this.Write("\" class=\"collapse\" name=\"menu\" ");
            
            #line 59 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f == Formatters[0] ? "checked='checked'" : ""));
            
            #line default
            #line hidden
            this.Write(" />\r\n\t\t\t<label for=\"menu_radio_");
            
            #line 60 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.Id));
            
            #line default
            #line hidden
            this.Write("\" class=\"nav\">\r\n\t\t\t\t");
            
            #line 61 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(f.DisplayName));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t</label>\r\n\t\t");
            
            #line 63 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t<hr />\r\n\t\t");
            
            #line 65 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
foreach(var formatter in Formatters){
            
            #line default
            #line hidden
            this.Write("\t\t<div class=\"container\" id=\"container_");
            
            #line 66 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(formatter.Id));
            
            #line default
            #line hidden
            this.Write("\">\r\n\t\t\t");
            
            #line 67 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
formatter.WriteBody(this);
            
            #line default
            #line hidden
            this.Write("\t\t</div>\r\n\t\t");
            
            #line 69 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t</div>\r\n\r\n\t\t<p>&nbsp;</p>\r\n\r\n\t</body>\r\n</html>\r\n\r\n\r\n\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 81 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"

	public int ErrorCode { get; set; }

	public string ErrorDescription { get; set; }

	public string Summary { get; set; }

	public IErrorSectionFormatter[] Formatters { get; set; }

	public void WriteText(string str) {
		Write(WebUtility.HtmlEncode(str));
	}

	private void WriteException(Exception ex) 
	{
		using (var sr = new StringReader(ex.ToString()))
		{
			string line;
			while ((line = sr.ReadLine()) != null)
			{
				this.Write(WebUtility.HtmlEncode(line));
				this.Write("<br />");
			}
		}
	}

	public void ObjectBrowser(object obj)
	{
		var jobject = JObject.FromObject(obj);
		ObjectBrowser(jobject);
	}

	public void ObjectBrowser(JArray arr)
	{
        
        #line default
        #line hidden
        
        #line 114 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("\t\t<div class=\"object-browser code\">\r\n\t\t\t<label>\r\n\t\t\t<input type=\"checkbox\" class=" +
        "\"collapse\" />\r\n\t\t\t<span class=\"collapse-off\">&gt; { } </span>\r\n\t\t\t<span class=\"c" +
        "ollapse-on\">[\r\n\t\t\t\t<div class=\"object-arr\">\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 121 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"

					foreach(var p in arr) {
						if(p is JObject) {
							ObjectBrowser((JObject)p);
						} else if (p is JArray) {
							ObjectBrowser((JArray)p);
						} else {
							this.Write(p.ToString());
						}
					}
					
        
        #line default
        #line hidden
        
        #line 131 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("\t\t\t\t</div>\r\n\t\t\t\t]\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t");

        
        #line default
        #line hidden
        
        #line 136 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
}

	public void ObjectBrowser(JObject obj)
	{
        
        #line default
        #line hidden
        
        #line 139 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("\t\t<div class=\"object-browser code\">\r\n\t\t\t<label>\r\n\t\t\t<input type=\"checkbox\" class=" +
        "\"collapse\" />\r\n\t\t\t<span class=\"collapse-off\">&gt; { } </span>\r\n\t\t\t<span class=\"c" +
        "ollapse-on\">{\r\n\t\t\t\t<div class=\"object-obj\">\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 146 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"

					foreach(var p in obj) {
						
        
        #line default
        #line hidden
        
        #line 148 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("<div class=\'prop\'><span class=\'propname\'>");

        
        #line default
        #line hidden
        
        #line 148 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"

						this.WriteText(p.Key);
						
        
        #line default
        #line hidden
        
        #line 150 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("</span>:");

        
        #line default
        #line hidden
        
        #line 150 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"

						if(p.Value is JObject) {
							ObjectBrowser((JObject)p.Value);
						} else if (p.Value is JArray) {
							ObjectBrowser((JArray)p.Value);
						} else {
							this.WriteText(p.Value.ToString());
						}
						this.Write("</div>");
					}
					
        
        #line default
        #line hidden
        
        #line 160 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t");

        
        #line default
        #line hidden
        
        #line 165 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
}


	public void WriteSourceCode(SourceModel source, bool collapse = true)
	{
        
        #line default
        #line hidden
        
        #line 169 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("\t\t<div class=\"source code\">\r\n\t\t\t<label>\r\n\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 172 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
if(collapse){
        
        #line default
        #line hidden
        
        #line 172 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write(" <input type=\"checkbox\" class=\"collapse\" /> ");

        
        #line default
        #line hidden
        
        #line 172 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
}
        
        #line default
        #line hidden
        
        #line 172 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("\t\t\t\t<div class=\"source-prelines collapse-on\">\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 174 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
 if(source.PreLines != null) WriteSourceLines(source.LineNumber - source.PreLines.Length, source.PreLines); 
        
        #line default
        #line hidden
        
        #line 174 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("\t\t\t\t</div>\r\n\t\t\t\t<div class=\"source-errorLine\">\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 177 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
 if(source.CurrentLine != null) WriteErrorLine(source.LineNumber, source.CurrentLine, source.ErrorColumn, source.ErrorLength);
        
        #line default
        #line hidden
        
        #line 177 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("\t\t\t\t</div>\r\n\t\t\t\t<div class=\"source-postlines collapse-on\">\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 180 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
 if(source.PostLines != null) WriteSourceLines(source.LineNumber + 1, source.PostLines);
        
        #line default
        #line hidden
        
        #line 180 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("\t\t\t\t</div>\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t");

        
        #line default
        #line hidden
        
        #line 184 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
}

    private void WriteSourceLines(int startLine, params string[] lines)
	{
		Write("<pre>");
		for(var i = 0; i < lines.Length; i++)
		{
			Write("<span class='lineNumber'>");
			Write(startLine + i + ": ");
			Write("</span><span class='codeLine'>");
			Write(WebUtility.HtmlEncode(lines[i]));
			WriteLine("</span>");
		}
		Write("</pre>");
	}

	private void WriteErrorLine(int lineNumber, string line, int errorColumn, int errorLength)
	{
		Write("<pre>");
		Write("<span class='lineNumber'>");
		Write(lineNumber + ": ");
		Write("</span><span class='codeLine'>");
		Write(WebUtility.HtmlEncode(line.Remove(errorColumn)));
		Write("<span class='errorUnderline'>");
		Write(WebUtility.HtmlEncode(line.Substring(errorColumn, Math.Min(line.Length - errorColumn, errorLength))));
		Write("</span>");
		Write(WebUtility.HtmlEncode(line.Substring(Math.Min(line.Length, errorColumn + errorLength))));
		WriteLine("</span>");
		Write("</pre>");
	}

	public void WriteKVTable(IEnumerable keys, IEnumerable values)
	{
		var zip = keys.Cast<object>().Zip(values.Cast<object>(), (k, v) => new KeyValuePair<object, object>(k, v));
		
        
        #line default
        #line hidden
        
        #line 218 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("\r\n\t\t<table class=\"kvtable\">\r\n\t\t\t<tr>\r\n\t\t\t\t<th> Variable </th>\r\n\t\t\t\t<th> Value </t" +
        "h>\r\n\t\t\t</tr>\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 225 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
foreach(var kvp in zip) {
        
        #line default
        #line hidden
        
        #line 225 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("\t\t\t\t<tr>\r\n\t\t\t\t\t<td>");

        
        #line default
        #line hidden
        
        #line 227 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
 WriteObject(kvp.Key); 
        
        #line default
        #line hidden
        
        #line 227 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("</td>\r\n\t\t\t\t\t<td>");

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
 WriteObject(kvp.Value); 
        
        #line default
        #line hidden
        
        #line 228 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("</td>\r\n\t\t\t\t</tr>\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 230 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
}
        
        #line default
        #line hidden
        
        #line 230 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"
this.Write("\t\t</table>\r\n\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 233 "C:\Users\exyi\OneDrive\code\dotvvm\src\DotVVM.Framework\Hosting\ErrorPages\ErrorPageTemplate.tt"

	}

	public void WriteObject(object obj) 
	{
		if (obj is IEnumerable<string>) WriteText(string.Concat((IEnumerable<string>)obj));
		else WriteText(Convert.ToString(obj)); 
	}

    class SourceLine
    {
        public int? LineNumber { get; set; }

        public string Text { get; set; }
	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class ErrorPageTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
