name: DotVVM CI

on:
  push:
    branches:
      - ci-test

env:
  DISPLAY: :42
  DOTVVM_ROOT: ${{ github.workspace }}
  DOTNET_NOLOGO: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  build-crossplatform:
    runs-on: ubuntu-latest
    container: registry.gitlab.com/cafstep/dotvvm-test/dotvvm
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: .npm/
          key: npm-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/cache@v2
        with:
          path: .nuget/
          key: nuget-${{ hashFiles('**/packages.lock.json') }}
      - uses: actions/cache@v2
        with:
          path: artifacts/
          key: artifacts-${{ github.sha }}
      - run: npm ci --cache $DOTVVM_ROOT/.npm --prefer-offline
        working-directory: ./src/DotVVM.Framework
      - run: npm run build
        working-directory: ./src/DotVVM.Framework
      - run: dotnet restore --packages $DOTVVM_ROOT/.nuget Crossplatform.sln
        working-directory: ./src
      - run: dotnet build --no-restore --configuration Release Crossplatform.sln
        working-directory: ./src

  unit-tests-crossplatform:
    runs-on: ubuntu-latest
    container: registry.gitlab.com/cafstep/dotvvm-test/dotvvm
    needs: build-crossplatform
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: .nuget/
          key: nuget-${{ hashFiles('**/packages.lock.json') }}
      - uses: actions/cache@v2
        with:
          path: artifacts/
          key: artifacts-${{ github.sha }}
      - run: |
          dotnet test $DOTVVM_ROOT/src/DotVVM.Framework.Tests.Common \
            --no-build \
            --logger "GitHubActions;report-warnings=true" \
            --configuration Release

  ui-tests-crossplatform:
    runs-on: ubuntu-latest
    container: registry.gitlab.com/cafstep/dotvvm-test/dotvvm
    needs: build-crossplatform
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: .nuget/
          key: nuget-${{ hashFiles('**/packages.lock.json') }}
      - uses: actions/cache@v2
        with:
          path: artifacts/
          key: artifacts-${{ github.sha }}
      - run: Xvfb $DISPLAY -screen 0 800x600x16 &
      - run: |
          dotnet run --project $DOTVVM_ROOT/src/DotVVM.Samples.BasicSamples.AspNetCoreLatest \
            --no-build \
            --configuration Release \
            --urls http://localhost:16018/ &
      - run: |
          dotnet test $DOTVVM_ROOT/src/DotVVM.Samples.Tests \
            --no-build \
            --logger "GitHubActions;report-warnings=true" \
            --configuration Release

  build-owin:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: .npm\
          key: npm-${{ hashFiles('**\package-lock.json') }}
      - uses: actions/cache@v2
        with:
          path: src\packages
          key: nuget-owin-${{ hashFiles('**\packages.lock.json') }}
      - uses: actions/cache@v2
        with:
          path: artifacts\
          key: artifacts-owin-${{ github.sha }}
      - run: npm ci --cache $env:DOTVVM_ROOT\.npm --prefer-offline
        working-directory: .\src\DotVVM.Framework
      - run: npm run build
        working-directory: .\src\DotVVM.Framework
      - uses: microsoft/setup-msbuild@v1.0.2
      - run: nuget restore $env:DOTVVM_ROOT\src\Windows.sln
      - run: |
          msbuild $env:DOTVVM_ROOT\src\Windows.sln `
            -p:Configuration=Release `
            -verbosity:quiet

  ui-tests-owin:
    runs-on: windows-latest
    container: mcr.microsoft.com/dotnet/framework/aspnet:4.8-windowsservercore-ltsc2019
    needs: build-owin
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: src\packages
          key: nuget-owin-${{ hashFiles('**\packages.lock.json') }}
      - uses: actions/cache@v2
        with:
          path: artifacts\
          key: artifacts-owin-${{ github.sha }}
      - run: cp -r artifacts\DotVVM.Samples.BasicSamples.Owin C:\inetpub\wwwroot
      - run: |
          dotnet test $DOTVVM_ROOT\src\DotVVM.Samples.Tests \
            --no-build \
            --logger "GitHubActions;report-warnings=true" \
            --configuration Release

# Built with ‚ù§ by the DotVVM team with a nudge from the [Pipeline Foundation](https://pipeline.foundation)
